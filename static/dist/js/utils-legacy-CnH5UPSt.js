System.register([],function(e,t){"use strict";return{execute:function(){const t=e("s",new class{_state;_listeners;_computed;constructor(){this._state={currentUser:null,userSettings:{theme:"dark",weekStart:0,timezone:"UTC",dateFormat:"DD-MM-YY",uniqueContextMode:!1,showBreadcrumb:!1,showMarkdownEditor:!1,hideNewContextButton:!1},selectedContext:null,selectedDate:null,contexts:[],notes:[],notesWithDates:[],currentCalendarMonth:(new Date).getMonth(),currentCalendarYear:(new Date).getFullYear(),isLoggingOut:!1,syncStatus:{pending:0,syncing:!1},serverTimeOffset:0},this._listeners=new Map,this._computed=new Map}get(e){return this._computed.has(e)?this._computed.get(e)(this._state):this._state[e]}set(e,t){const s=this._state[e];s!==t&&(this._state[e]=t,this._notify(e,t,s))}update(e){Object.entries(e).forEach(([e,t])=>{this.set(e,t)})}subscribe(e,t){return this._listeners.has(e)||this._listeners.set(e,new Set),this._listeners.get(e).add(t),()=>{const s=this._listeners.get(e);s&&s.delete(t)}}subscribeMany(e,t){const s=e.map(e=>this.subscribe(e,t));return()=>s.forEach(e=>e())}computed(e,t){this._computed.set(e,t)}getState(){return{...this._state}}_notify(e,t,s){const n=this._listeners.get(e);n&&n.forEach(e=>{try{e(t,s)}catch(n){}});const r=this._listeners.get("*");r&&r.forEach(n=>{try{n(e,t,s)}catch(r){}})}});t.computed("today",e=>{const t=e.userSettings.timezone||"UTC",s=new Date(Date.now()+e.serverTimeOffset),n=new Intl.DateTimeFormat("en-US",{timeZone:t,year:"numeric",month:"2-digit",day:"2-digit"}).formatToParts(s);return`${n.find(e=>"year"===e.type).value}-${n.find(e=>"month"===e.type).value}-${n.find(e=>"day"===e.type).value}`}),"undefined"!=typeof window&&(window.__STATE__=t),e("c",new class{db=null;dbName="DailyNotesDB";version=1;pendingWrites=new Map;writeTimer=null;BATCH_DELAY=500;async init(){return new Promise((e,t)=>{const s=indexedDB.open(this.dbName,this.version);s.onerror=()=>t(s.error),s.onsuccess=()=>{this.db=s.result,e()},s.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains("notes")||t.createObjectStore("notes",{keyPath:"id"}),t.objectStoreNames.contains("contexts")||t.createObjectStore("contexts",{keyPath:"id"})}})}async saveNote(e){if(!this.db)return;const t=`${e.context}-${e.date}`;this.pendingWrites.set(t,{...e,id:t,_localTimestamp:Date.now(),_cachedAt:Date.now(),updated_at:e.updated_at||(new Date).toISOString()}),this.scheduleBatchWrite()}scheduleBatchWrite(){this.writeTimer&&clearTimeout(this.writeTimer),this.writeTimer=window.setTimeout(()=>{this.flushPendingWrites()},this.BATCH_DELAY)}async flushPendingWrites(){if(!this.db||0===this.pendingWrites.size)return;const e=Array.from(this.pendingWrites.values());this.pendingWrites.clear();const t=this.db.transaction(["notes"],"readwrite"),s=t.objectStore("notes");return e.forEach(e=>{s.put(e)}),new Promise((e,s)=>{t.oncomplete=()=>{e()},t.onerror=()=>s(t.error)})}async saveNoteImmediate(e){if(!this.db)return;const t=this.db.transaction(["notes"],"readwrite"),s=t.objectStore("notes"),n=`${e.context}-${e.date}`;return s.put({...e,id:n,_localTimestamp:Date.now(),_cachedAt:Date.now(),updated_at:e.updated_at||(new Date).toISOString()}),new Promise((e,s)=>{t.oncomplete=()=>e(),t.onerror=()=>s(t.error)})}async getNote(e,t){if(!this.db)return null;const s=this.db.transaction(["notes"],"readonly").objectStore("notes"),n=`${e}-${t}`;return new Promise(e=>{const t=s.get(n);t.onsuccess=()=>e(t.result||null),t.onerror=()=>e(null)})}async saveNotes(e){if(!this.db)return;const t=this.db.transaction(["notes"],"readwrite"),s=t.objectStore("notes"),n=Date.now();return e.forEach(e=>{const t=`${e.context}-${e.date}`;s.put({...e,id:t,_localTimestamp:n,_cachedAt:n,updated_at:e.updated_at||(new Date).toISOString()})}),new Promise((e,s)=>{t.oncomplete=()=>e(),t.onerror=()=>s(t.error)})}async getNotesByContext(e){if(!this.db)return[];const t=this.db.transaction(["notes"],"readonly").objectStore("notes");return new Promise(s=>{const n=t.getAll();n.onsuccess=()=>{const t=n.result||[];s(t.filter(t=>t.context===e))},n.onerror=()=>s([])})}async saveContexts(e){if(!this.db)return;if(!e||!Array.isArray(e))return;const t=this.db.transaction(["contexts"],"readwrite"),s=t.objectStore("contexts");return e.forEach(e=>{s.put({...e,_localTimestamp:Date.now()})}),new Promise((e,s)=>{t.oncomplete=()=>e(),t.onerror=()=>s(t.error)})}async getContexts(){if(!this.db)return[];const e=this.db.transaction(["contexts"],"readonly").objectStore("contexts");return new Promise(t=>{const s=e.getAll();s.onsuccess=()=>t(s.result||[]),s.onerror=()=>t([])})}async deleteNote(e,t){if(!this.db)return;const s=`${e}-${t}`;this.pendingWrites.delete(s);const n=this.db.transaction(["notes"],"readwrite");return n.objectStore("notes").delete(s),new Promise((e,t)=>{n.oncomplete=()=>{e()},n.onerror=()=>t(n.error)})}async clear(){if(!this.db)return;const e=this.db.transaction(["notes","contexts"],"readwrite");return e.objectStore("notes").clear(),e.objectStore("contexts").clear(),new Promise((t,s)=>{e.oncomplete=()=>t(),e.onerror=()=>s(e.error)})}});class s extends EventTarget{emit(e,t){this.dispatchEvent(new CustomEvent(e,{detail:t}))}on(e,t){const s=t;return this.addEventListener(e,s),()=>this.removeEventListener(e,s)}once(e,t){const s=t,n=t=>{s(t),this.removeEventListener(e,n)};return this.addEventListener(e,n),()=>this.removeEventListener(e,n)}}const n=e("e",new s),r=e("E",{NOTE_CACHED:"note-cached",NOTE_LOADED:"note-loaded",NOTE_SAVED:"note-saved",NOTE_CHANGED:"note-changed",SYNC_STATUS:"sync-status",OPERATION_SYNCED:"operation-synced",SYNC_ERROR:"sync-error",CONTEXT_CHANGED:"context-changed",CONTEXTS_LOADED:"contexts-loaded",DATE_CHANGED:"date-changed",SHOW_ERROR:"show-error",SHOW_SUCCESS:"show-success"});e("S",class{api;queue=[];processing=!1;retryDelay=2e3;maxRetryDelay=3e4;batchTimer=null;batchDelay=15e3;failedOperations=new Map;maxRetries=3;constructor(e){this.api=e}add(e){if("save-note"===e.type){const t=this.queue.findIndex(t=>"save-note"===t.type&&t.data.context===e.data.context&&t.data.date===e.data.date);-1!==t?this.queue[t]={...e,id:Date.now()+Math.random()}:this.queue.push({...e,id:Date.now()+Math.random()})}else{if("delete-note"===e.type){this.queue.length;return this.queue=this.queue.filter(t=>!("save-note"===t.type&&t.data.context===e.data.context&&t.data.date===e.data.date)),this.queue.length,this.queue.push({...e,id:Date.now()+Math.random()}),void this.processImmediate()}this.queue.push({...e,id:Date.now()+Math.random()})}this.updateUI(),this.scheduleBatch()}scheduleBatch(){this.batchTimer&&clearTimeout(this.batchTimer),this.batchTimer=setTimeout(()=>{this.process()},this.batchDelay)}processImmediate(){this.batchTimer&&(clearTimeout(this.batchTimer),this.batchTimer=null),this.updateUI(),this.process()}updateUI(){const e=this.queue.length;n.emit(r.SYNC_STATUS,{pending:e,syncing:this.processing})}async process(){if(!this.processing&&0!==this.queue.length){for(this.processing=!0,this.batchTimer=null,this.updateUI();this.queue.length>0;){const t=this.queue[0];if(!t)break;const s=this.getOperationKey(t);try{await this.executeOperation(t),this.queue.shift(),this.failedOperations.delete(s),n.emit(r.OPERATION_SYNCED,{operationId:String(t.id||s)}),this.updateUI(),this.retryDelay=2e3}catch(e){const t=e instanceof Error?e:new Error(String(e));if(t.message.includes("Session expired"))break;const i=(this.failedOperations.get(s)||0)+1;this.failedOperations.set(s,i),i>=this.maxRetries?(this.queue.shift(),this.failedOperations.delete(s),n.emit(r.SYNC_ERROR,{message:t.message,maxRetriesReached:!0})):(n.emit(r.SYNC_ERROR,{message:t.message,retryCount:i,maxRetries:this.maxRetries}),await new Promise(e=>setTimeout(e,this.retryDelay)),this.retryDelay=Math.min(1.5*this.retryDelay,this.maxRetryDelay))}}this.processing=!1,this.retryDelay=2e3,this.updateUI()}}getOperationKey(e){return"save-note"===e.type||"delete-note"===e.type?`${e.type}-${e.data.context}-${e.data.date}`:`${e.type}-${e.id}`}async executeOperation(e){switch(e.type){case"save-note":return await this.api.saveNote(e.data);case"delete-note":return await this.api.deleteNote(e.data.context,e.data.date);case"create-context":return await this.api.createContext(e.data);default:throw new Error("Unknown operation type")}}getPendingCount(){return this.queue.length}clear(){this.queue=[],this.failedOperations.clear(),this.batchTimer&&(clearTimeout(this.batchTimer),this.batchTimer=null),this.updateUI()}getStats(){return{queueSize:this.queue.length,processing:this.processing,failedOperations:this.failedOperations.size,retryDelay:this.retryDelay}}})}}});
